#!/usr/bin/env node

/**
 * Module dependencies.
 */

 const app = require('../app');
 const debug = require('debug')('phishsense:server');
 const http = require('http');
 const path = require('path');
 
 /**
  * Normalize a port into a number, string, or false.
  */
 
  function normalizePort(val) {
   let port = parseInt(val, 10);
 
   if (isNaN(port)) {
     // named pipe
     return val;
   }
 
   if (port >= 0) {
     // port number
     return port;
   }
 
   return false;
 }
 
 /**
  * Event listener for HTTP server "error" event.
  */
 
 function onError(error) {
   if (error.syscall !== 'listen') {
     throw error;
   }
 
   let bind = typeof port === 'string'
     ? 'Pipe ' + port
     : 'Port ' + port;
 
   // handle specific listen errors with friendly messages
   switch (error.code) {
     case 'EACCES':
       console.error(bind + ' requires elevated privileges');
       process.exit(1);
       break;
     case 'EADDRINUSE':
       console.error(bind + ' is already in use');
       process.exit(1);
       break;
     default:
       throw error;
   }
 }
 
 /**
  * Event listener for HTTP server "listening" event.
  */
 
 function onListening() {
   let addr = server.address();
   let bind = typeof addr === 'string'
     ? 'pipe ' + addr
     : 'port ' + addr.port;
   debug('Listening on ' + bind);
 }
 
 
 // Add HTTPS Section
 const fs = require('fs');
 const https = require('https');
 const http_port = normalizePort(process.env.PORT || '3000');
 const https_port = process.env.PORT_HTTPS || 3443; 
 
 let options = {
  key  : fs.readFileSync(path.join(__dirname ,'../cert','my_cert.key')),
  cert : fs.readFileSync(path.join(__dirname ,'../cert','my_cert.crt'))   
 };
 
 app.set("port",https_port);
 
 /*
 Â° Create HTTPS server.
 */ 
 server = https.createServer(options, app).listen(https_port, function () {
  console.log('Magic happens on port ' + https_port); 
 });
 
 /**
 * Listen on provided port, on all network interfaces.
 */
 
 server.on('error', onError);
 server.on('listening', onListening);
 
 // Redirect from http port to https
 http.createServer(function (req, res) {
   res.writeHead(301, { "Location": "https://" + req.headers['host'].replace(http_port,https_port) + req.url });
   console.log("http requet, will go to >> ");
   console.log("https://" + req.headers['host'].replace(http_port,https_port) + req.url );
   res.end();
 }).listen(http_port);